name: Docker Image CI

on:
  pull_request:
    branches:
    - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
      #- name: Cache
      #  uses: actions/cache@v1.1.0
      #  with:
      #    # A directory to store and save the cache
      #    path: ${{ github.workspace }}/.docker-sample-cache
      #    # An explicit key for restoring and saving the cache
      #    key: ${{ runner.os }}-sample-cache
      - name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v1
      #- name: Available platforms
      #  run: echo ${{ steps.buildx.outputs.platforms }}        
      - name: Buildx the Docker image
        run: |
          flag=$(date +%s)
          echo "*** Imagen a crear ${DOCKER_REGISTRY_URL}/${DOCKER_USERNAME}/${DOCKER_IMAGE_NAME}:${flag}"
          echo "*** Login en ${DOCKER_REGISTRY_URL}"
          echo "${DOCKER_PASSWORD}" | docker login ${DOCKER_REGISTRY_URL} -u "${DOCKER_USERNAME}" --password-stdin
          #echo "*** Limpiamos la cache"
          #docker builder prune -af
          echo "*** Construimos la imagen ${DOCKER_IMAGE_NAME}:latest"
          docker buildx build . \
            --platform linux/arm64 \
            --file Dockerfile \
            --output "type=image,push=false" \
            --tag "${DOCKER_IMAGE_NAME}:latest" \
            --tag "${DOCKER_IMAGE_NAME}:${flag}"
          docker tag "${DOCKER_IMAGE_NAME}:latest" "${DOCKER_REGISTRY_URL}/${DOCKER_USERNAME}/${DOCKER_IMAGE_NAME}:${flag}"
          docker image ls
          echo "*** Publicamos la imagen ${DOCKER_REGISTRY_URL}/${DOCKER_USERNAME}/${DOCKER_IMAGE_NAME}:${flag}"
          docker push "${DOCKER_REGISTRY_URL}/${DOCKER_USERNAME}/${DOCKER_IMAGE_NAME}:${flag}"
        env:
          DOCKER_USERNAME: ${{ secrets.GITHUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_REGISTRY_URL: docker.pkg.github.com
          DOCKER_IMAGE_NAME: docker-sample
